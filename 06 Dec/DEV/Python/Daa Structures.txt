List

List: A list is an ordered collection of items that can be of different data types. Lists are mutable, which means that their elements can be modified after they are created. Here's an example of a list:
A list is a built-in data structure that is used to store an ordered collection of items or elements of any data type. Here are some methods that are commonly used with lists in Python:
1. append(): Adds an item to the end of the list.

2. extend(): Adds all items from an iterable (e.g. another list) to the end of the list.

3. insert(): Inserts an item at a specified position in the list.


4. remove(): Removes the first occurrence of an item from the list.


5. pop(): Removes and returns the item at a specified index in the list.


6. index(): Returns the index of the first occurrence of an item in the list.


7. count(): Returns the number of times an item appears in the list.


8. sort(): Sorts the items in the list in ascending order.


9. reverse(): Reverses the order of the items in the list.

10. copy(): Returns a shallow copy of the list.


11. clear(): Removes all items from the list.
my_list = [1, 2, 3, 4, 5]

my_list.append(6)
print(my_list)  # Output: [1, 2, 3, 4, 5, 6]

my_list.extend([7, 8, 9])
print(my_list)  # Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]

my_list.insert(0, 0)
print(my_list)  # Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

my_list.remove(0)
print(my_list)  # Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]

popped_item = my_list.pop(3)
print(popped_item)  # Output: 4
print(my_list)  # Output: [1, 2, 3, 5, 6, 7, 8, 9]

index_of_5 = my_list.index(5)
print(index_of_5)  # Output: 3

num_of_5s = my_list.count(5)
print(num_of_5s)  # Output: 1

my_list.sort()
print(my_list)  # Output: [1, 2, 3, 5, 6, 7, 8, 9]

my_list.reverse()
print(my_list)  # Output: [9, 8, 7, 6, 5, 3, 2, 1]

my_list_copy = my_list.copy()
print(my_list_copy)  # Output: [9, 8, 7, 6, 5, 3, 2, 1]

my_list.clear()
print(my_list)  # Output: []













Dictionary






















