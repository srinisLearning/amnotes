



















Getting User Info  
  let email = ''
  let name = ''
  let myname = ''
  const user = await currentUser()
  console.log(user)
  if(user){
     
   name = user.username as string
   myname = user?.firstName as string + user?.lastName as string
   email  = user.emailAddresses[0].emailAddress as string
  }

Sign In Sign Up Pages

https://clerk.com/docs/references/nextjs/custom-signup-signin-pages
app/sign-up/[[...sign-up]]/page.tsx
app/sign-in/[[...sign-in]]/page.tsx


import { SignUp } from '@clerk/nextjs'

export default function Page() {
  return <SignUp />
}
-
import { SignIn } from '@clerk/nextjs'

export default function Page() {
  return <SignIn />
}


Middleware.js

import { clerkMiddleware, createRouteMatcher } from '@clerk/nextjs/server'

const isProtectedRoute = createRouteMatcher(['/dashboard(.*)', '/forum(.*)'])

export default clerkMiddleware((auth, req) => {
  if (isProtectedRoute(req)) auth().protect()
})

export const config = {
  matcher: [
    // Skip Next.js internals and all static files, unless found in search params
    '/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',
    // Always run for API routes
    '/(api|trpc)(.*)',
  ],
}
import { clerkMiddleware, createRouteMatcher } from '@clerk/nextjs/server'

const isPublicRoute = createRouteMatcher(['/sign-in(.*)', '/sign-up(.*)']);

export default clerkMiddleware((auth, request) => {
  if(!isPublicRoute(request)) {
    auth().protect();
  }
});

export const config = {
  matcher: [
    // Skip Next.js internals and all static files, unless found in search params
    '/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',
    // Always run for API routes
    '/(api|trpc)(.*)',
  ],
};







