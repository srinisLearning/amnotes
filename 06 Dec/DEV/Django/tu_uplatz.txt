Install Python
 ? Django is a python web framework, thus requiring python to be installed on your machine.
 ? After installation, open the command prompt and check that the python version matches the version you installed by executing following command 
? py - -version PIP 
? pip is a package manager for python and is included by default with the python installer. It helps to install and uninstall python packages (such as Django!). 
To Check the Django version
python
import django
django.VERSION
-
 
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR,'templates')
STATIC_DIR = os.path.join(BASE_DIR,'static')

-
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
         'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = [STATIC_DIR]
STATICFILES_DIRS = ['static']

-



 settings.py

from pathlib import Path
import os
 
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR,'templates')
STATIC_DIR = os.path.join(BASE_DIR,'static')

 
SECRET_KEY = 'django-insecure-2%9817p$5@5k_q7cx#%8nf41*c-4z2x3v)*0%ai#new37u7*wx'

 
DEBUG = True

ALLOWED_HOSTS = []
 

INSTALLED_APPS = [
    
    'admindemo',
    'adminemp'
]

MIDDLEWARE = [
     
]

ROOT_URLCONF = 'admindemo.urls'

TEMPLATES = [
    {
        
        'DIRS': [TEMPLATE_DIR],
        
    },
]

WSGI_APPLICATION = 'admindemo.wsgi.application'
 

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
 

AUTH_PASSWORD_VALIDATORS = [
    
]
 

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
 

STATIC_URL = 'static/'
STATICFILES_DIRS = [STATIC_DIR]
 

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

python -m venv env
env\Scripts\activate


? Open windows command prompt and type the following command
 • django-admin startproject project_name 
? The above command will create new django project with project folder structure

? Open windows command prompt and type the following command 
• py manage.py runserver [port : 8000]
? The above command will run django server on port 8000

? Once we are done with django project use the following command to create applications 
  py manage.py startapp application_name 
? Based on our requirement we can create any number of applications 
? Every application contains different types of files
-
* Create Template and Static folder


ADMIN

add the apps to Installed Apps

 py manage.py migrate to enable admin mode


 py manage.ppy createsuperuser
Views  

from django.contrib import admin;
from django.urls import path;
from AppOne import views as v1;
from AppTwo import views as v2;

urlpatterns = [
    path('admin/', admin.site.urls),
    path('home/', v1.homePageView),
    path('about/', v1.aboutPageView),
    path('contact/',v1.contactPageView),
    path('services/',v1.servicePageView),
    path('home2/',v2.app2HomePageView)
    
]
-

from django.contrib import admin;
from django.urls import path,include;

urlpatterns = [
    path('admin/', admin.site.urls),
    path('AppOne/',include('AppOne.urls'))    
    
]

-
 
from django.urls import path;
from . import views; 

urlpatterns = [
    
    path('home/', views.homePageView, name='home'),
    path('about/', views.aboutPageView, name='about'),
    path('contact/',views.contactPageView, name='contact'),
    path('services/',views.servicePageView, name='services'),
    
    
] 
from django.shortcuts import render, HttpResponse


def homePageView(request):
    msg ="<h1>Welcome to Wasan World</h1>";
    return HttpResponse(msg);

def aboutPageView(request):
     
    aboutMsg ="<h1>Welcome to About View</h1>";
    return HttpResponse(aboutMsg)

def servicePageView(request):
    
    serviceMessage='<h1> We offer the following services </h1>'
    return HttpResponse(serviceMessage);

def contactPageView(request):
    
    contactMessage = '<h1> Below is our contact information </h1>'
    return HttpResponse(contactMessage);

-

 from django.shortcuts import render,HttpResponse


 def homePageView(request):
    msg= 'Welcome to Wasan World'
    colors = ['red','green','blue','yellow']
    loggedIn = False
    data = {'msg':msg,'colors':colors,'loggedIn':loggedIn}
    return render(request,'templateappone/home.html',data)
TEMPLATES

https://github.com/prosoftwaredevelopment/Learn-Django

{% load static %}

<link rel='stylesheet'  href= ' {% static, css/mystyles.css %}' />

<img src= '{%  static , images/htree.jpg %}' />
base.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <title>{% block pageTitle %} {% endblock %} </title>
</head>
<body>

    {% block pageContent %}

    {% endblock %}

  <!-- Your page content goes here -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
 
images.html

{% extends 'index.html' %} 
{% load static %} 
{% block title %}Image Page{% endblock %} 
{% block content %} 
<div class="container-fluid">
 <div class="row">
 <div class="col-md-6">
 <img src="{% static 'django.png' %}" class="img-fluid" alt="Responsive image">
 </div>
 </div>
 </div>
 {% endblock %} 


MODELS


py manage.py makemigrations

py manage.py sqlmigrate<appname> 0001

CREATE TABLE "adminemp_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "eid" integer NOT NULL, "ename" varchar(50) NOT NULL, "emobile" integer NOT NULL, "eemail" varchar(100) NOT NULL, "ecity" varchar(50) NOT NULL, "esalary" real NOT NULL);
COMMIT;


py manage.py migrate

from django.contrib.auth.models import Group
admin.site.unregister(Group)
create table employee(id int primarykey auto_increment, enam varchar(50), esalary real)
models.py
class Employee(models.Model):
      ename=models.CharField(max_length=60)
      esalary=models.FloatField()
admin.py
       adminsite.register(Employee)

py manage.py makemigrations

py manage.py sqlmigrate app_name id

py manage.py migrate
all()
save()
delete()
get()
count()
filter():[contains,icontains,startswith,istartswith,endswith,iendswith,exact,gt,ge,lt,le]
admin.py
from django.contrib import admin
from django.contrib.auth.models import User,Group
from .models import Employee
from .models import Patients

admin.site.site_header ="Wasan World Welcomes You"

class EmployeeAdmin(admin.ModelAdmin):
    list_display=['eid','ename','emobile','eemail','ecity','esalary']

class PatientsAdmin(admin.ModelAdmin):
    list_display=['uid','name','height','weight','martial_status']
# Register your models here.
admin.site.register(Employee,EmployeeAdmin)
admin.site.register(Patients,PatientsAdmin)
#admin.site.unregister(Employee)
#admin.site.unregister(Group)
#admin.site.unregister(User)

-

# Generated by Django 4.2.1 on 2023-05-19 07:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eid', models.IntegerField()),
                ('ename', models.CharField(max_length=50)),
                ('emobile', models.IntegerField()),
                ('eemail', models.CharField(max_length=100)),
                ('ecity', models.CharField(max_length=50)),
                ('esalary', models.FloatField()),
            ],
        ),
    ]


models.py

from django.db import models

# Create your models here.
class Employee(models.Model):
    eid=models.IntegerField()
    ename=models.CharField(max_length=50)
    emobile=models.IntegerField()
    eemail=models.CharField(max_length=100)
    ecity=models.CharField(max_length=50)
    esalary=models.FloatField()

class Patients(models.Model):
    uid=models.IntegerField()
    name=models.CharField(max_length=50)
    height=models.FloatField()
    weight=models.IntegerField()
    martial_status = models.BooleanField()
TEMPLATE DEMO





ADMIN DEMO


 




