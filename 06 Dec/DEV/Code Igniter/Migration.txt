
namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class AddBlog extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'blog_id' => [
                'type'           => 'INT',
                'constraint'     => 5,
                'unsigned'       => true,
                'auto_increment' => true,
            ],
            'blog_title' => [
                'type'       => 'VARCHAR',
                'constraint' => '100',
            ],
            'blog_description' => [
                'type' => 'TEXT',
                'null' => true,
            ],
        ]);
        $this->forge->addKey('blog_id', true);
        $this->forge->createTable('blog');
    }

    public function down()
    {
        $this->forge->dropTable('blog');
    }
}
php spark migrate:create tasks

Rolls back all migrations, taking the database group to a blank slate, effectively migration 0:

php spark migrate:rollback

Refreshes the database state by first rolling back all migrations, and then migrating all:

php spark migrate:refresh
<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class EmployeesMigration extends Migration
{
	public function up()
	{
		$this->forge->addField([
			"id" => [
				"type" => "INT",
				"constraint" => 5,
				"unsigned" => true,
				"auto_increment" => true
			],
			"name" => [
				"type" => "varchar",
				"constraint" => 50,
				"null" => false
			],
			"email" => [
				"type" => "varchar",
				"constraint" => 50,
				"null" => false,
				"unique" => true
			],
			"profile_image" => [
				"type" => "varchar",
				"constraint" => 220,
				"null" => true
			]
		]);
		$this->forge->addPrimaryKey("id");
		$this->forge->createTable("employees");
	}

	public function down()
	{
		$this->forge->dropTable("employees");
	}
}
