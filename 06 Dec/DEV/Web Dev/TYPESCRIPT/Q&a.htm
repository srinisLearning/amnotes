<html><head><title>Q&a</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body bgcolor="#ffffff" leftmargin=5 topmargin=5 rightmargin=5 bottommargin=5>
<font size=2 color="#000000" face="Arial">
<div><table width="100%" border=0 cellpadding=6 cellspacing=6 bordercolor="#000000" bgcolor="#ffffff">
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>What does the 'readonly' access modifier do for an array variable assignment like: `const codeNames: readonly string[] = ['Coding', 'God']`?</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>Allows no changes and is there simply to be read from and not modified&nbsp;&nbsp;</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>Allows no changes and is there simply to be read from and not modified&nbsp;&nbsp;</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana">False</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>You can disable implicit variable type assignment by enabling the compiler option:</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>noImplicitAny&nbsp;&nbsp;</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>You can enable 'undefined' and 'null' types to be accounted for by enabling the compiler property:</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>strictNullChecks&nbsp;&nbsp;</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>What does the 'readonly' access modifier do for an array variable assignment like: `const codeNames: readonly string[] = ['Coding', 'God']`?</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>Allows no changes and is there simply to be read from and not modified&nbsp;&nbsp;</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>TypeScript will always correctly infer the type of an array.</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana">False</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>Interfaces are similar to type aliases, but only for object types</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana">True</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>Numeric enums first value is defaulted to what?</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana">0</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>True or False: Generics can not be assigned default values.</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana">False</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>What is the type of the parameter: `function ex(param1?: string){}`?</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>string | undefined&nbsp;&nbsp;</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>protected modifiers only are allowed in the inherited class.</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana">True</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
</table>
</div>
</font>
</body></html>
