<html><head><title>Static Generation</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body bgcolor="#ffffff" leftmargin=5 topmargin=5 rightmargin=5 bottommargin=5>
<font size=2 color="#000000" face="Arial">
<div><table width="100%" border=0 cellpadding=15 cellspacing=6 bordercolor="#000000" bgcolor="#ffffff">
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div align=center><font size=5 color="#000000" face="Verdana"><b>STATIC GENERATION</b></font></div>
<ul type="disc">
<li><font color="#000000" face="Verdana">Static Generation is a method of pre-rendering where the HTML pages are generated at build time</font></li>
<li><font color="#000000" face="Verdana">The pre rendered static pages can be pushed into a CDN,cached,and served to clients across the globe almost instantly</font></li>
<li><font color="#000000" face="Verdana">Static content is fast and better for SEO as they are immediately indexed by search engines</font></li>
<li><font color="#000000" face="Verdana">With and without external data</font></li>
<li><font color="#000000" face="Verdana">Export getStaticProps function for external data</font></li>
<li><font color="#000000" face="Verdana">HTML,JavaScript and a JSON file are generated</font></li>
<li><font color="#000000" face="Verdana">If you navigate directly to the page route, the HTML file is served</font></li>
<li><font color="#000000" face="Verdana">If you navigate to the page route from a different route,the page is created on the client side using the Java Script and JSON prefetched from the server</font></li>
</ul>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div align=center><font size=4 color="#008000"><b>index.js</b></font></div>
<div align=center><font size=4 color="#008000"><b><br></b></font></div>
<div>import styles from "./index.module.css";</div>
<div>import Link from "next/link";</div>
<div><br></div>
<div>export const <b>getStaticProps</b>&nbsp;= async () =&gt; {</div>
<div>&nbsp; const response = await fetch("https://jsonplaceholder.typicode.com/users");</div>
<div>&nbsp; const data = await response.json();</div>
<div>&nbsp; return {</div>
<div>&nbsp; &nbsp; props: {</div>
<div>&nbsp; &nbsp; &nbsp; users: data,</div>
<div>&nbsp; &nbsp; },</div>
<div>&nbsp; };</div>
<div>};</div>
<div><br></div>
<div>const UserList = ({ users }) =&gt; {</div>
<div>&nbsp; return (</div>
<div>&nbsp; &nbsp; &lt;&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h3&gt;User List&lt;/h3&gt;</div>
<div><br></div>
<div>&nbsp; &nbsp; &nbsp; {users.map((user) =&gt; {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; return (</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Link</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; key={user.id}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; href={"/wasan/" + user.id}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; className={styles.single}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {user.name}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/Link&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; );</div>
<div>&nbsp; &nbsp; &nbsp; })}</div>
<div>&nbsp; &nbsp; &lt;/&gt;</div>
<div>&nbsp; );</div>
<div>};</div>
<div><br></div>
<div>export default UserList;</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div align=center><font size=4 color="#008000"><b>[userId].js</b></font></div>
<div><font size=4 color="#008000"><b><br></b></font></div>
<div>export const <b>getStaticPaths</b>&nbsp;= async () &nbsp;=&gt; {</div>
<div>&nbsp; &nbsp; const response = await fetch('https://jsonplaceholder.typicode.com/users')</div>
<div>&nbsp; &nbsp; const data = await response.json()</div>
<div>&nbsp; &nbsp; const paths = data.map(currElem =&gt; {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; return {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; params: {userId:currElem.id.toString()}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; }</div>
<div>&nbsp; &nbsp; })</div>
<div>&nbsp; &nbsp; return {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; paths,</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; fallback:false</div>
<div><br></div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; }</div>
<div>&nbsp; &nbsp; }</div>
<div><br></div>
<div><br></div>
<div><br></div>
<div>&nbsp; &nbsp; </div>
<div>&nbsp; &nbsp; export const <b>getStaticProps</b>&nbsp;= async (context) =&gt; {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;const userId = context.params.userId;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;const res = await fetch('https://jsonplaceholder.typicode.com/users/' + userId)</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;const data = await res.json();</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; props :</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;users :data</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div>
<div>&nbsp; &nbsp; }</div>
<div><br></div>
<div><br></div>
<div><br></div>
<div><br></div>
<div>const UserDetail = ({users}) =&gt; {</div>
<div>&nbsp; return (</div>
<div>&nbsp; &nbsp; &lt;&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h3&gt;Detail Page&lt;/h3&gt;</div>
<div>&nbsp; &nbsp; &nbsp; {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{users.name }&lt;/p&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{users.email }&lt;/p&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{users.website }&lt;/p&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{users.address.city }&lt;/p&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{users.address.zipcode }&lt;/p&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div>
<div>&nbsp; &nbsp; &nbsp; }</div>
<div>&nbsp; &nbsp; &lt;/&gt;</div>
<div>&nbsp; );</div>
<div>};</div>
<div><br></div>
<div>export default UserDetail;</div>
<div><br></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div align=center><font size=5 color="#008000"><b>Post List</b></font></div>
<div align=center><font size=5 color="#008000"><b><br></b></font></div>
<div>import Link from "next/link";</div>
<div><br></div>
<div>export const getStaticProps = async () =&gt; {</div>
<div>&nbsp; const response = await fetch("https://jsonplaceholder.typicode.com/posts");</div>
<div>&nbsp; const data = await response.json();</div>
<div>&nbsp; return {</div>
<div>&nbsp; &nbsp; props: {</div>
<div>&nbsp; &nbsp; &nbsp; posts: data,</div>
<div>&nbsp; &nbsp; },</div>
<div>&nbsp; };</div>
<div>};</div>
<div><br></div>
<div>const PostList = ({ posts }) =&gt; {</div>
<div>&nbsp; return (</div>
<div>&nbsp; &nbsp; &lt;&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h3&gt;Post List&lt;/h3&gt;</div>
<div>&nbsp; &nbsp; &nbsp; {posts.slice(0, 5).map((post) =&gt; {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; return (</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div key={post.id}&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Link href={`/thapapost/${post.id}`}&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;{post.title}&lt;/p&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/Link&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/span&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; );</div>
<div>&nbsp; &nbsp; &nbsp; })}</div>
<div>&nbsp; &nbsp; &lt;/&gt;</div>
<div>&nbsp; );</div>
<div>};</div>
<div><br></div>
<div>export default PostList;</div>
<div><br></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div align=center><font size=5 color="#008000"><b>Post Detail</b></font></div>
<div><br></div>
<div>export const getStaticPaths = async () =&gt; {</div>
<div>&nbsp; const response = await fetch("https://jsonplaceholder.typicode.com/posts");</div>
<div>&nbsp; const data = await response.json();</div>
<div>&nbsp; const paths = data.map((currElem) =&gt; {</div>
<div>&nbsp; &nbsp; return {</div>
<div>&nbsp; &nbsp; &nbsp; params: {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; postId: currElem.id.toString(),</div>
<div>&nbsp; &nbsp; &nbsp; },</div>
<div>&nbsp; &nbsp; };</div>
<div>&nbsp; });</div>
<div>&nbsp; return {</div>
<div>&nbsp; &nbsp; paths,</div>
<div>&nbsp; &nbsp; fallback: false,</div>
<div>&nbsp; };</div>
<div>};</div>
<div><br></div>
<div>export const getStaticProps = async (context) =&gt; {</div>
<div>&nbsp; const id = context.params.postId;</div>
<div>&nbsp; const response = await fetch(</div>
<div>&nbsp; &nbsp; `https://jsonplaceholder.typicode.com/posts/${id}`</div>
<div>&nbsp; );</div>
<div>&nbsp; const data = await response.json();</div>
<div>&nbsp; return {</div>
<div>&nbsp; &nbsp; props: {</div>
<div>&nbsp; &nbsp; &nbsp; post: data,</div>
<div>&nbsp; &nbsp; },</div>
<div>&nbsp; };</div>
<div>};</div>
<div><br></div>
<div>const PostDetail = ({ post }) =&gt; {</div>
<div>&nbsp; const { id, title, body } = post;</div>
<div>&nbsp; return (</div>
<div>&nbsp; &nbsp; &lt;div&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h2&gt;Post Detail&lt;/h2&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h5&gt;{id}&lt;/h5&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h5&gt;{title}&lt;/h5&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;h5&gt;{body}&lt;/h5&gt;</div>
<div>&nbsp; &nbsp; &lt;/div&gt;</div>
<div>&nbsp; );</div>
<div>};</div>
<div><br></div>
<div>export default PostDetail;</div>
<div><br></div>
</font>
</td>
</tr>
<tr valign=top>
<td colspan=2><font size=2 color="#000000" face="Arial">
<div align=center><font size=4 color="#008000"><b>Code Evolution Vishwas</b></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font face="Courier New">import Link from 'next/link'

</font></div>
<div><font face="Courier New">&nbsp;</font></div>
<div>function PostList({ posts }) {
 </div>
<div>&nbsp; return (
 </div>
<div>&nbsp; &nbsp; &lt;&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &lt;h1&gt;List of Posts&lt;/h1&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; {posts.map(post =&gt; {
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; return (
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div key={post.id}&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Link href={`posts/${post.id}`}&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {post.id} {post.title}
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/h2&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/Link&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;hr /&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; )
 </div>
<div>&nbsp; &nbsp; &nbsp; })}
 </div>
<div>&nbsp; &nbsp; &lt;/&gt;
 </div>
<div>&nbsp; )
}</div>
<div>}

</div>
<div>&nbsp;</div>
<div>export default PostList

</div>
<div>&nbsp;</div>
<div>export async function getStaticProps() {
 </div>
<div>&nbsp; const response = await fetch('https://jsonplaceholder.typicode.com/posts')
 </div>
<div>&nbsp; const data = await response.json()

</div>
<div><br></div>
<div>&nbsp; return {
 </div>
<div>&nbsp; &nbsp; props: {
 </div>
<div>&nbsp; &nbsp; &nbsp; posts: data.slice(0, 3)
 </div>
<div>&nbsp; &nbsp; }
 </div>
<div>&nbsp; }
}</div>
<div>}</div>
<div>&nbsp;</div>
<hr noshade size=1 color="#000000">
<div><br></div>
<div><br></div>
<div><br></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>import { useRouter } from 'next/router'

</div>
<div>&nbsp;</div>
<div>function Post({ post }) {
 </div>
<div>&nbsp; const router = useRouter()

</div>
<div><br></div>
<div>&nbsp; if (router.isFallback) {
 </div>
<div>&nbsp; &nbsp; return &lt;div&gt;Loading...&lt;/div&gt;
 </div>
<div>&nbsp; }

</div>
<div><br></div>
<div>&nbsp; return (
 </div>
<div>&nbsp; &nbsp; &lt;&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &lt;h2&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; {post.id} {post.title}
 </div>
<div>&nbsp; &nbsp; &nbsp; &lt;/h2&gt;
 </div>
<div>&nbsp; &nbsp; &nbsp; &lt;p&gt;{post.body}&lt;/p&gt;
 </div>
<div>&nbsp; &nbsp; &lt;/&gt;
 </div>
<div>&nbsp; )
}</div>
<div>}

</div>
<div>&nbsp;</div>
<div>export default Post

</div>
<div>&nbsp;</div>
<div>export async function getStaticProps(context) {
 </div>
<div>&nbsp; const { params } = context
 </div>
<div>&nbsp; const response = await fetch(
 </div>
<div>&nbsp; &nbsp; `https://jsonplaceholder.typicode.com/posts/${params.postId}`
 </div>
<div>&nbsp; )
 </div>
<div>&nbsp; const data = await response.json()

</div>
<div><br></div>
<div>&nbsp; if (!data.id) {
 </div>
<div>&nbsp; &nbsp; return {
 </div>
<div>&nbsp; &nbsp; &nbsp; notFound: true
 </div>
<div>&nbsp; &nbsp; }
 </div>
<div>&nbsp; }

</div>
<div><br></div>
<div>&nbsp; console.log(`Generating page for /posts/${params.postId}`)
 </div>
<div>&nbsp; return {
 </div>
<div>&nbsp; &nbsp; props: {
 </div>
<div>&nbsp; &nbsp; &nbsp; post: data
 </div>
<div>&nbsp; &nbsp; }
 </div>
<div>&nbsp; }
}</div>
<div>}

</div>
<div>
e</div>
<div>export async function getStaticPaths() {
 </div>
<div>&nbsp; // const response = await fetch('https://jsonplaceholder.typicode.com/posts')
 </div>
<div>&nbsp; // const data = await response.json()
 </div>
<div>&nbsp; // const paths = data.map(post =&gt; {
 </div>
<div>&nbsp; // &nbsp; return {
 </div>
<div>&nbsp; // &nbsp; &nbsp; params: { postId: `${post.id}` }
 </div>
<div>&nbsp; // &nbsp; }
 </div>
<div>&nbsp; // })

</div>
<div><br></div>
<div>&nbsp; return {
 </div>
<div>&nbsp; &nbsp; paths: [
 </div>
<div>&nbsp; &nbsp; &nbsp; { params: { postId: '1' } },
 </div>
<div>&nbsp; &nbsp; &nbsp; { params: { postId: '2' } },
 </div>
<div>&nbsp; &nbsp; &nbsp; { params: { postId: '3' } }
 </div>
<div>&nbsp; &nbsp; ],
 </div>
<div>&nbsp; &nbsp; fallback: true
 </div>
<div>&nbsp; }
}</div>
<div>}</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>function User({ user }) {</div>
<div>&nbsp;return (</div>
<div>&nbsp;&lt;&gt;</div>
<div>&nbsp;&lt;p&gt;{user.name}&lt;/p&gt;</div>
<div>&nbsp;&lt;p&gt;{user.email}&lt;/p&gt;</div>
<div>&nbsp;&lt;hr /&gt;</div>
<div>&nbsp;&lt;/&gt;</div>
<div>&nbsp;)</div>
<div>&nbsp;}</div>
<div><br></div>
<div>&nbsp;export default User</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>import User from '../components/user'</div>
<div><br></div>
<div>&nbsp;function UserList({ users }) {</div>
<div>&nbsp;return (</div>
<div>&nbsp;&lt;&gt;</div>
<div>&nbsp;&lt;h1&gt;List of users&lt;/h1&gt;</div>
<div>&nbsp;{users.map(user =&gt; {</div>
<div>&nbsp;return (</div>
<div>&nbsp;&lt;div key={user.id}&gt;</div>
<div>&nbsp;&lt;User user={user} /&gt;</div>
<div>&nbsp;&lt;/div&gt;</div>
<div>&nbsp;)</div>
<div>&nbsp;})}</div>
<div>&nbsp;&lt;/&gt;</div>
<div>&nbsp;)</div>
<div>&nbsp;}</div>
<div><br></div>
<div>&nbsp;export default UserList</div>
<div><br></div>
<div>&nbsp;export async function getStaticProps() {</div>
<div>&nbsp;const response = await fetch('https://jsonplaceholder.typicode.com/users')</div>
<div>&nbsp;const data = await response.json()</div>
<div>&nbsp;// console.log(data)</div>
<div><br></div>
<div>&nbsp;return {</div>
<div>&nbsp;props: {</div>
<div>&nbsp;users: data</div>
<div>&nbsp;}</div>
<div>&nbsp;}</div>
<div>&nbsp;}</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
</table>
</div>
</font>
</body></html>
