<html><head><title>API Routes</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body bgcolor="#ffffff" leftmargin=5 topmargin=5 rightmargin=5 bottommargin=5>
<font size=2 color="#000000" face="Arial">
<div><table width="100%" border=0 cellpadding=15 cellspacing=6 bordercolor="#000000" bgcolor="#ffffff">
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>export async function GET(){</div>
<div>&nbsp; &nbsp; return &nbsp;new Response('Hello World')</div>
<div>}</div>
</font>
</td>
<td><br>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>export async function GET(){</div>
<div>&nbsp; &nbsp; return Response.json(products)</div>
<div>}</div>
<div><br></div>
<div><br></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>export async function POST(request){</div>
<div>&nbsp; &nbsp; const product &nbsp;= await request.json()</div>
<div>&nbsp; &nbsp; const newProduct = {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; id: products.length + 1,</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; name: product.name,</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; category: product.category,</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; price: product.price,</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; stock: product.stock</div>
<div>&nbsp; &nbsp; }</div>
<div>&nbsp; &nbsp; products.push(newProduct)</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; </div>
<div>&nbsp; &nbsp; return new Response(JSON.stringify(newProduct), {</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; headers: { "Content-Type": "application/json" },</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; status: 201,</div>
<div>&nbsp; &nbsp; &nbsp; });</div>
<div><br></div>
<div>}</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>export async function GET(_request, { params }) {</div>
<div>&nbsp;</div>
<div>&nbsp; const product = products.find(</div>
<div>&nbsp; &nbsp; (product) =&gt; product.id === parseInt(params.productId)</div>
<div>&nbsp; );</div>
<div>&nbsp; return Response.json(product);</div>
<div>}</div>
<div>&nbsp; </div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>export async function DELETE( _request,{ params })</div>
<div>&nbsp;{</div>
<div>&nbsp; const index = products.findIndex(</div>
<div>&nbsp; &nbsp; (product) =&gt; product.id === parseInt(params.productId)</div>
<div>&nbsp; );</div>
<div>&nbsp; const deletedProduct = products[index];</div>
<div>&nbsp; products.splice(index, 1);</div>
<div>&nbsp; return Response.json(deletedProduct);</div>
<div>}</div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div>export async function GET(request){</div>
<div>&nbsp; &nbsp; const searchParms = request.nextUrl.searchParams</div>
<div>&nbsp; &nbsp; console.log(searchParms)</div>
<div>&nbsp; &nbsp; const query = searchParms.get("query")</div>
<div>&nbsp; &nbsp; const filteredProducts = query</div>
<div>&nbsp; &nbsp; ? products.filter((product) =&gt; product.name.includes(query) ): products;</div>
<div>&nbsp; &nbsp; return Response.json(filteredProducts)</div>
<div><br></div>
<div>}</div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div>&nbsp;&lt;Image</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; src="/vercel.svg"</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alt="Vercel Logo"</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; className="dark:invert"</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width={100}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height={24}</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; priority</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /&gt;</div>
</font>
</td>
</tr>
<tr valign=top>
<td><br>
</td>
<td><br>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<h2 align=center><font size=2 color="#000000" face="Arial"><a href="https://github.com/gopinav/Next-JS-Tutorials/tree/master/next-api/pages/api"><font size=3 color="#008000"><b>api</b></font></a><font size=3 color="#008000"><b>/</b></font><a href="https://github.com/gopinav/Next-JS-Tutorials/tree/master/next-api/pages/api/comments"><font size=3 color="#008000"><b>comments</b></font></a><font size=3 color="#008000"><b>/index.js&nbsp;</b></font></font></h2>
<div><font face="Courier New"><br></font></div>
<div>import { comments } from '@/data/comments'

</div>
<div>&nbsp;</div>
<div>export default function handler(req, res) {
 </div>
<div>&nbsp; if (req.method === 'GET') {
 </div>
<div>&nbsp; &nbsp; res.status(200).json(comments)
 </div>
<div>&nbsp; } else if (req.method === 'POST') {
 </div>
<div>&nbsp; &nbsp; const comment = req.body.comment
 </div>
<div>&nbsp; &nbsp; const newComment = {
 </div>
<div>&nbsp; &nbsp; &nbsp; id: Date.now(),
 </div>
<div>&nbsp; &nbsp; &nbsp; text: comment
 </div>
<div>&nbsp; &nbsp; }
 </div>
<div>&nbsp; &nbsp; comments.push(newComment)
 </div>
<div>&nbsp; &nbsp; res.status(201).json(newComment)
 </div>
<div>&nbsp; }
}</div>
<div>}</div>
<hr noshade size=1 color="#000000">
<div align=center><font size=3 color="#008000"><b><br></b></font></div>
<div align=center><font size=3 color="#008000"><b>api/comments/commentId</b></font></div>
<div align=center><font size=3 color="#008000" face="Courier New"><b><br></b></font></div>
<div>import { comments } from 'text text @/data/comments'

</div>
<div>
</div>
<div><b>export default function handler(req, res)</b>&nbsp;{
 </div>
<div>&nbsp; const { commentId } = req.query
 </div>
<div>&nbsp; if (req.method === 'GET') {
 </div>
<div>&nbsp; &nbsp; const comment = comments.find(comment =&gt; comment.id === parseInt(commentId))
 </div>
<div>&nbsp; &nbsp; res.status(200).json(comment)
 </div>
<div>&nbsp; } else if (req.method === 'DELETE') {
 </div>
<div>&nbsp; &nbsp; const deletedComment = comments.find(
 </div>
<div>&nbsp; &nbsp; &nbsp; comment =&gt; comment.id === parseInt(commentId)
 </div>
<div>&nbsp; &nbsp; )
 </div>
<div>&nbsp; &nbsp; const index = comments.findIndex(
 </div>
<div>&nbsp; &nbsp; &nbsp; comment =&gt; comment.id === parseInt(commentId)
 </div>
<div>&nbsp; &nbsp; )
 </div>
<div>&nbsp; &nbsp; comments.splice(index, 1)
 </div>
<div>&nbsp; &nbsp; res.status(200).json(deletedComment)
 </div>
<div>&nbsp; }
}</div>
<div>}</div>
<div><br></div>
<hr noshade size=1 color="#000000">
<div><br></div>
<div align=center><font size=3 color="#008000"><b>api/[...params].js</b></font></div>
<div align=center><font size=3><br></font></div>
<div>export default function handler(req, res) {</div>
<div>&nbsp;const params = req.query.params</div>
<div>&nbsp;console.log(params)</div>
<div>&nbsp;res.status(200).json(params)</div>
<div>&nbsp;}</div>
<div><br></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div align=center><font size=3 color="#008000"><b><br></b></font></div>
<div align=center><font size=3 color="#008000"><b>comments/index.js</b></font></div>
<div><font size=3 color="#008000"><b><br></b></font></div>
<div>import { useState } from 'react'</div>
<div>&nbsp;function CommentsPage() {</div>
<div>&nbsp;const [comments, setComments] = useState([])</div>
<div>&nbsp;const [comment, setComment] = useState('')</div>
<div><br></div>
<div>&nbsp;const fetchComments = async () =&gt; {</div>
<div>&nbsp;const response = await fetch('/api/comments')</div>
<div>&nbsp;const data = await response.json()</div>
<div>&nbsp;setComments(data)</div>
<div>&nbsp;}</div>
<div><br></div>
<div>&nbsp;const submitComment = async () =&gt; {</div>
<div>&nbsp;const response = await fetch('/api/comments', {</div>
<div>&nbsp;method: 'POST',</div>
<div>&nbsp;body: JSON.stringify({ comment }),</div>
<div>&nbsp;headers: {</div>
<div>&nbsp;'Content-Type': 'application/json'</div>
<div>&nbsp;}</div>
<div>&nbsp;})</div>
<div>&nbsp;const data = await response.json()</div>
<div>&nbsp;console.log(data)</div>
<div>&nbsp;}</div>
<div><br></div>
<div>&nbsp;const deleteComment = async commentId =&gt; {</div>
<div>&nbsp;const response = await fetch(`/api/comments/${commentId}`, {</div>
<div>&nbsp;method: 'DELETE'</div>
<div>&nbsp;})</div>
<div>&nbsp;const data = await response.json()</div>
<div>&nbsp;console.log(data)</div>
<div>&nbsp;fetchComments()</div>
<div>&nbsp;}</div>
<div>&nbsp;return (</div>
<div>&nbsp;&lt;&gt;</div>
<div>&nbsp;&lt;div&gt;</div>
<div>&nbsp;&lt;input</div>
<div>&nbsp;type='text'</div>
<div>&nbsp;value={comment}</div>
<div>&nbsp;onChange={e =&gt; setComment(e.target.value)}</div>
<div>&nbsp;/&gt;</div>
<div>&nbsp;&lt;button onClick={submitComment}&gt;Submit comment&lt;/button&gt;</div>
<div>&nbsp;&lt;/div&gt;</div>
<div>&nbsp;&lt;hr /&gt;</div>
<div>&nbsp;&lt;button onClick={fetchComments}&gt;Load comments&lt;/button&gt;</div>
<div>&nbsp;{comments.map(comment =&gt; {</div>
<div>&nbsp;return (</div>
<div>&nbsp;&lt;div key={comment.id}&gt;</div>
<div>&nbsp;{comment.id}. {comment.text}</div>
<div>&nbsp;&lt;button onClick={() =&gt; deleteComment(comment.id)}&gt;Delete&lt;/button&gt;</div>
<div>&nbsp;&lt;/div&gt;</div>
<div>&nbsp;)</div>
<div>&nbsp;})}</div>
<div>&nbsp;&lt;/&gt;</div>
<div>&nbsp;)</div>
<div>&nbsp;}</div>
<div><br></div>
<div>&nbsp;export default CommentsPage</div>
<div><br></div>
<hr noshade size=1 color="#000000">
<div><br></div>
<div align=center><font size=3 color="#008000"><b>comments[commentId].js</b></font></div>
<div><font face="Courier New"><br></font></div>
<div><font face="Courier New"><br></font></div>
<div><font face="Courier New">import { comments } from '../../data/comments'

</font></div>
<div><font face="Courier New">&nbsp;</font></div>
<div><font face="Courier New">function Comment({ comment }) {
 </font></div>
<div><font face="Courier New">&nbsp; return (
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &lt;div&gt;
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &nbsp; {comment.id}. {comment.text}
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &lt;/div&gt;
 </font></div>
<div><font face="Courier New">&nbsp; )
}</font></div>
<div><font face="Courier New">}

</font></div>
<div><font face="Courier New">
e</font></div>
<div><font face="Courier New">export default Comment

</font></div>
<div><font face="Courier New">
e</font></div>
<div><font face="Courier New">export async function getStaticProps(context) {
 </font></div>
<div><font face="Courier New">&nbsp; const { params } = context
 </font></div>
<div><font face="Courier New">&nbsp; const { commentId } = params

</font></div>
<div><font face="Courier New"><br></font></div>
<div><font face="Courier New">&nbsp; const comment = comments.find(comment =&gt; comment.id === parseInt(commentId))
 </font></div>
<div><font face="Courier New">&nbsp; console.log(comment)

</font></div>
<div><font face="Courier New"><br></font></div>
<div><font face="Courier New">&nbsp; /** Don't do this 
 </font></div>
<div><font face="Courier New">&nbsp; const response = await fetch(`http:localhost:3000/api/comments/${commentId}`)
 </font></div>
<div><font face="Courier New">&nbsp; const data = await response.json()
 </font></div>
<div><font face="Courier New">&nbsp; */

</font></div>
<div><font face="Courier New"><br></font></div>
<div><font face="Courier New">&nbsp; return {
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; props: {
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &nbsp; comment
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; }
 </font></div>
<div><font face="Courier New">&nbsp; }
}</font></div>
<div><font face="Courier New">}

</font></div>
<div><font face="Courier New">
e</font></div>
<div><font face="Courier New">export async function getStaticPaths() {
 </font></div>
<div><font face="Courier New">&nbsp; return {
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; paths: [
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &nbsp; { params: { commentId: '1' } },
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &nbsp; { params: { commentId: '2' } },
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; &nbsp; { params: { commentId: '3' } }
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; ],
 </font></div>
<div><font face="Courier New">&nbsp; &nbsp; fallback: false
 </font></div>
<div><font face="Courier New">&nbsp; }
}</font></div>
<div><font face="Courier New">}</font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
<tr valign=top>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
<td><font size=2 color="#000000" face="Arial">
<div><font color="#000000" face="Verdana"><br></font></div>
</font>
</td>
</tr>
</table>
</div>
</font>
</body></html>
